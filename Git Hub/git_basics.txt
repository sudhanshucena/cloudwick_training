GIT HUB : Version control system ( Edited by Sudhanshu )

resource : https://www.atlassian.com/git/tutorials/saving-changes/git-add
			https://guides.github.com/introduction/flow/
			https://guides.github.com/activities/hello-world/

----------- Everything is local-------------------------------
1. git init -> to initiate the folder as a git repository
2. git status -> to check the changes made
3. git add <file> -> Stage all changes in <file> for the next commit.
4. git add <directory> -> Stage all changes in <directory> for the next commit.
5. git commit -> add the file ( note it is saved offline locally untill actually uploaded to the repository)
6. git log -> check the log until now
----------------------------------------------------

--------- Actually creating repository online and pushing---------

7. git remote add origin <http:\\ git repository file> ->  add the repository
	resource : https://help.github.com/articles/adding-a-remote/

8. git remote -v -> verify the repository

9. git push origin master -> push to the master branch

10. git checkout -b "issue 1"-> create a new branch with the name of the branch as 'issue 1'.

11. To push the current branch and set the remote as upstream, use

    git push --set-upstream origin <issue_1>  : note issue_1 is branch name

12. 
	sudhanshu@sudhanshu-Inspiron-5547:~/Desktop/Cloudwick Training/Git Hub$ git branch
* Sudhanshu    (shows * to represent the current branch)
  master
  sudhanshu
    

----------------------------------------------------------------------------------


------------------------------- Some Error Debugging -----------------------------
1. fatal: 'Sudhanshu' does not appear to be a git repository
	fatal: Could not read from remote repository.

	Please make sure you have the correct access rights
	and the repository exists.
	sudhanshu@sudhanshu-Inspiron-5547:~/Desktop/Cloudwick Training$ git commit -a

*** Please tell me who you are.

Run

	git config --global user.email "you@example.com"
	git config --global user.name "Your Name"


  2. git push --set-upstream "Sudhanshu"


  	fatal: 'Sudhanshu' does not appear to be a git repository
	fatal: Could not read from remote repository.

	Please make sure you have the correct access rights
	and the repository exists.

	(The reposiroty does not exist. Either create a repository online by logging on to the github or ....)


3. Amending the commit message

	git commit --amend

	Will open your editor, allowing you to change the commit message of the most recent commit. Additionally, you can set the commit message directly in the command line with:

	git commit --amend -m "New commit message"

	â€¦however, this can make multi-line commit messages or small corrections more cumbersome to enter.

	Make sure you don't have any working copy changes before doing this or they can get committed too.
	Changing the message of a commit that you've already pushed to your remote branch

	If you've already pushed your commit up to your remote branch, then you'll need to force push the commit with

	git push <remote> <branch> --force
	# Or
	git push <remote> <branch> -f

	Warning: force-pushing will overwrite the remote branch with the state of your local one. If there are commits on the remote branch that you don't have in your local branch, you will lose those commits.

	Warning: be cautious about amending commits that you have already shared with other people. Amending commits essentially rewrites them to have different SHA IDs, which poses a problem if other people have copies of the old commit that you've rewritten. Anyone who has a copy of the old commit will need to re-synchronize their work with your newly re-written commit, which can sometimes be difficult, so make sure you coordinate with others when attempting to rewrite shared commit history, or just avoid rewriting shared commits altogether.


--------------------------- Collaborator------------------------------------------
Create a Merge request : add a new collaborator who can review and comment the code.


Git Branches:
	One can move from a particular code to a different file hypothetically similar to branching out from a tree node.






--------------------------- LOG OR VERSIONING OF THE FILE-----------------
Original Version : Author: Sudhanshu